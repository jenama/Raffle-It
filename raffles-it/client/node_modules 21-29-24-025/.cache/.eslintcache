[{"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/index.js":"1","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/App.js":"2","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Home.jsx":"3","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/NewRaffle.jsx":"4","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Raffles.jsx":"5","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/RaffleProfile.jsx":"6","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/Winner.jsx":"7","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/PickWinner.jsx":"8","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/Navbar.jsx":"9","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/SignUp.jsx":"10","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/Participants.jsx":"11"},{"size":243,"mtime":1622487210651,"results":"12","hashOfConfig":"13"},{"size":2091,"mtime":1625774572900,"results":"14","hashOfConfig":"13"},{"size":747,"mtime":1625774955008,"results":"15","hashOfConfig":"13"},{"size":2548,"mtime":1625775158646,"results":"16","hashOfConfig":"13"},{"size":2568,"mtime":1625775199014,"results":"17","hashOfConfig":"13"},{"size":2890,"mtime":1623685823221,"results":"18","hashOfConfig":"13"},{"size":1003,"mtime":1622518652855,"results":"19","hashOfConfig":"13"},{"size":1892,"mtime":1623816706153,"results":"20","hashOfConfig":"13"},{"size":853,"mtime":1623817453591,"results":"21","hashOfConfig":"13"},{"size":3484,"mtime":1623820995618,"results":"22","hashOfConfig":"13"},{"size":2100,"mtime":1623851026127,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"kqj0v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/index.js",[],["53","54"],"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/App.js",[],"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Home.jsx",[],"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/NewRaffle.jsx",[],"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Raffles.jsx",["55"],"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/RaffleProfile.jsx",["56","57"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport axios from \"axios\";\nimport SignUp from \"./SignUp\";\nimport Participants from \"./Participants\";\nimport Winner from \"./Winner\";\nimport PickWinner from \"./PickWinner\";\nimport './CSS/raffleProfile.css';\n\nexport default function RaffleProfile({\n  raffles,\n  firstname,\n  lastname,\n  email,\n  phone,\n  setFirstname,\n  setLastname,\n  setEmail,\n  setPhone,\n  participants,\n  setParticipants,\n  name,\n  secretToken,\n  setSecretToken,\n  reset,\n  setReset,\n  setMsg, msg\n}) {\n  const [raffle, setRaffle] = useState(\"\");\n  const [winner, setWinner] = useState('')\n\n  const { id } = useParams();\n  \n  useEffect(() => {\n    async function getRaffleInfo() {\n      try {\n        const url = `http://localhost:4100/raffles/${id}`;\n        const { data } = await axios.get(url);\n        setRaffle(data.payload);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    }\n    getRaffleInfo();\n  }, []);\n\n  return (\n    <div className=\"raffle-profile\">\n      <Navbar id={id} />\n      <h1>Welcome to {raffle.name}'s Raffle</h1>\n      <h3>Here are some rules:</h3>\n     <p>Be respectful</p>\n     <p>Winners will be chosen at random</p>\n      <Switch>\n        <Route path={`/raffle/:id/register`}>\n          <SignUp\n            firstname={firstname}\n            lastname={lastname}\n            email={email}\n            phone={phone}\n            setFirstname={setFirstname}\n            setLastname={setLastname}\n            setEmail={setEmail}\n            setPhone={setPhone}\n            raffles={raffles}\n            name={name}\n            id={id}\n            setMsg={setMsg}\n            msg={msg}\n            reset={reset}\n            setReset={setReset}\n            setParticipants={setParticipants}\n            participants={participants}\n          />\n        </Route>\n        <Route path={`/raffle/:id/participants`}>\n          <Participants\n            raffles={raffles}\n            id={id}\n            setParticipants={setParticipants}\n            participants={participants}\n          />\n        </Route>\n        <Route path={`/raffle/:id/pick-winner`}>\n          <PickWinner\n            id={id}\n            winner={winner}\n            setWinner={setWinner}\n            secretToken={secretToken}\n            setSecretToken={setSecretToken}\n            reset={reset}\n            setReset={setReset}\n            setMsg={setMsg}\n            msg={msg}\n          />\n        </Route>\n        <Route path={`/raffle/:id/winner`}>\n          <Winner\n             id={id}\n            winner={winner}\n            setWinner={setWinner}\n            secretToken={secretToken}\n            setSecretToken={setSecretToken}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/Winner.jsx",["58","59","60"],"import React, { useState, useEffect } from \"react\";\nimport EmailIcon from '@material-ui/icons/Email';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./CSS/Winner.css\";\n\nexport default function Winner({ id, winner, setWinner }) {\n  useEffect(() => {\n    async function getWinner() {\n      try {\n        const url = `http://localhost:4100/raffles/${id}/winner`;\n        const { data } = await axios.get(url);\n        setWinner(data.payload[0]);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    }\n    getWinner();\n  }, []);\n\n  console.log(winner);\n  return (\n    <div className=\"winner-container\">\n      <h2>We Have A Winner</h2>\n      <h4>{winner.firstname} {winner.lastname}</h4>\n      <div>{winner.registered_at}</div>\n      <div>#{winner.id}</div>\n      <div><EmailIcon></EmailIcon> {winner.email}</div>\n      <div><PhoneAndroidIcon></PhoneAndroidIcon> {winner.phone}</div>\n    </div>\n  );\n}\n","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/PickWinner.jsx",["61","62","63","64"],"import React, { useState, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\"\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function PickWinner({\n  id,\n  setWinner,\n  winner,\n  secretToken,\n  setSecretToken,\n  reset,\n  setReset,\n  msg,\n  setMsg, raffles\n}) {\n\n  const history = useHistory()\n   const classes = useStyles();\n  \n  async function ChooseAWinner(e) {\n    console.log('click')\n    e.preventDefault()\n   try {\n      const baseUrl = `http://localhost:4100`;\n      const endpoint = `/raffles/${id}/winner`;\n      const data = {\n        secretToken: secretToken\n      }\n      const chooseWinner = await axios.put(`${baseUrl}${endpoint}`, data);\n      if (secretToken){\n        // if(secretToken === raffles){\n          history.push(`/raffle/${id}/winner`)\n          setMsg('User was picked')\n        // }else{\n        //   setMsg('Enter correct secret token')\n        // }\n      } else {\n      setMsg(`Please enter raffle's secret token`)\n      }\n   \n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  return (\n    <div className=\"pick-winner-container\">\n      <div className=\"pick-winner\">\n        <h2>Pick a Winner</h2>\n        <form className=\"pick-winner-form\" onSubmit={ChooseAWinner} >\n          <input type=\"text\" placeholder=\"secret token\" onChange={(e) => setSecretToken(e.target.value)} value={secretToken} />\n          <br/>\n          <Button  type='submit' variant=\"outlined\" size=\"large\" color=\"primary\" className={classes.margin}>\n            Pick A Winner\n          </Button>\n          <p>{msg}</p>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/Navbar.jsx",["65","66","67","68","69","70"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport \"./CSS/navbar.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function Navbar({ id }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <div>\n      <nav>\n        <Link to=\"/\">All Raffles</Link>{\" \"}\n        <Link to={`/raffle/${id}/register`}>Register</Link>{\" \"}\n        <Link to={`/raffle/${id}/participants`}>Participants</Link>{\" \"}\n        <Link to={`/raffle/${id}/pick-winner`}>Pick Winner</Link>\n      </nav>\n    </div>\n  );\n}\n","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/SignUp.jsx",["71","72"],"import React from \"react\";\nimport axios from \"axios\";\nimport \"./CSS/Signup.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\nexport default function SignUp({\n  firstname,\n  lastname,\n  email,\n  phone,\n  setFirstname,\n  setLastname,\n  setEmail,\n  setPhone,\n  setParticipant,\n  participant,\n  id,\n  name,\n  reset,\n  setReset,\n  setMsg,\n  msg\n}) {\n  const classes = useStyles();\n\n  async function handleParticipantRegisteration(e) {\n    e.preventDefault();\n    // debugger\n    if (firstname && lastname && email || phone) {\n      try {\n        const baseUrl = `http://localhost:4100`;\n        const endpoint = `/raffles/${id}/participants`;\n        const data = {\n          firstname: firstname,\n          lastname: lastname,\n          email: email,\n          phone: phone,\n        };\n        const addParticipant = await axios.post(`${baseUrl}${endpoint}`, data);\n        setParticipant(addParticipant);\n        setMsg('Successfully registered a participant')\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    } else{\n      setMsg('Please fill the missing inputs')\n    }\n\n  }\n\n  function resetForm() {\n    setEmail('')\n    setFirstname('')\n    setLastname('')\n    setPhone('')\n  }\n\n  return (\n    <div className=\"sign-up\">\n      <h2>{name}</h2>\n      <form onSubmit={handleParticipantRegisteration}>\n        <div className=\"names\">\n          <div className=\"firstname\">\n            <TextField\n              // error\n              id=\"standard-error-helper-text\"\n              label=\"Firstname*\"\n              defaultValue={firstname}\n              helperText={msg}\n              onChange={(e) => setFirstname(e.target.value)}\n            />\n          </div>\n          <div className=\"lastname\">\n            <TextField\n              // error\n              id=\"standard-error-helper-text\"\n              onChange={(e) => setLastname(e.target.value)}\n              defaultValue={lastname}\n              label=\"Lastname*\"\n              helperText={msg}\n            />\n          </div>\n        </div>\n        <div className=\"email\">\n          <TextField\n            // error\n            id=\"standard-error-helper-text\"\n            label=\"Email*\"\n            onChange={(e) => setEmail(e.target.value)}\n            defaultValue={email}\n            helperText={msg}\n          />\n        </div>\n        <div className=\"phone\">\n          <TextField\n            // error\n            id=\"standard-error-helper-text\"\n            label=\"Phone\"\n            onChange={(e) => setPhone(e.target.value)}\n            defaultValue={phone}\n            \n          />\n        </div>\n        <div className=\"signup-btn\">\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            className={classes.margin}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            className={classes.margin}\n            onClick={resetForm}\n           \n          >\n            Reset\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/RaffleProfile/Participants.jsx",["73","74"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './CSS/Participants.css'\n\nexport default function Participants({ id, participants, setParticipants }) {\n\n  const [participantFilter, setParticipantFilter] = useState('')\n  const [participantsFilterArray,setParticipantsFilterArray] = useState([])\n  \n  useEffect(() => {\n    async function getAllParticipants() {\n        try {\n            const url = `http://localhost:4100/raffles/${id}/participants`;\n          const { data } = await axios.get(url) \n            setParticipants(data.payload)\n            \n      } catch (error) {\n          console.log('error', error)\n      }\n    }\n    getAllParticipants()\n  }, []);\n\n\n   const searchParticipant = (event) => {\n      setParticipantFilter(event.target.value)\n     \n      let filteredArray = participants.filter(participant => {\n          if(participant.firstname === participantFilter || participant.lastname === participantFilter){\n            return true\n          } else {\n            return false\n          }\n      })\n      setParticipantsFilterArray(filteredArray)\n      console.log('participants filter Array', participantsFilterArray)\n    }\n\n\n  return (   \n    <div className=\"participants-container\">\n        <input type ='text' onChange={searchParticipant} value={participantsFilterArray}/>\n        <h2>Participants: {participants.length} total</h2>\n        <div className='participants'>\n            {participants.map((participant, i) => {\n                return (\n                    <div className='participant' key={i}>\n                      <div className='left'>\n                        <img src='https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png'/>\n                      </div>\n                      <div className='right'>\n                        <h3>{participant.firstname} {participant.lastname}</h3>\n                        <p>{participant.email}</p>\n                        <p>{participant.phone}</p>\n                      </div>\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n  );\n}\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":28,"column":6,"nodeType":"81","endLine":28,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"87","line":48,"column":6,"nodeType":"81","endLine":48,"endColumn":8,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"90","line":20,"column":6,"nodeType":"81","endLine":20,"endColumn":8,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"89","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"92","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"83","severity":1,"message":"93","line":41,"column":13,"nodeType":"85","messageId":"86","endLine":41,"endColumn":25},{"ruleId":"83","severity":1,"message":"94","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"95","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":12},{"ruleId":"83","severity":1,"message":"96","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":11},{"ruleId":"83","severity":1,"message":"97","line":16,"column":9,"nodeType":"85","messageId":"86","endLine":16,"endColumn":16},{"ruleId":"83","severity":1,"message":"98","line":17,"column":10,"nodeType":"85","messageId":"86","endLine":17,"endColumn":15},{"ruleId":"83","severity":1,"message":"99","line":19,"column":12,"nodeType":"85","messageId":"86","endLine":19,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":46,"column":31,"nodeType":"102","messageId":"103","endLine":46,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":46,"column":40,"nodeType":"102","messageId":"103","endLine":46,"endColumn":42},{"ruleId":"79","severity":1,"message":"104","line":22,"column":6,"nodeType":"81","endLine":22,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":49,"column":25,"nodeType":"108","endLine":49,"endColumn":108},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRaffles'. Either include it or remove the dependency array. If 'setRaffles' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["111"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["112"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'setWinner'. Either include them or remove the dependency array. If 'setWinner' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["113"],"'useEffect' is defined but never used.","'chooseWinner' is assigned a value but never used.","'Paper' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'handleChange' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'id' and 'setParticipants'. Either include them or remove the dependency array. If 'setParticipants' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [setRaffles]",{"range":"123","text":"124"},"Update the dependencies array to be: [id]",{"range":"125","text":"126"},"Update the dependencies array to be: [id, setWinner]",{"range":"127","text":"128"},"Update the dependencies array to be: [id, setParticipants]",{"range":"129","text":"130"},[800,802],"[setRaffles]",[1114,1116],"[id]",[626,628],"[id, setWinner]",[697,699],"[id, setParticipants]"]
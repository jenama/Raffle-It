{"ast":null,"code":"var _jsxFileName = \"/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Raffles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Raffles({\n  raffles,\n  selected,\n  setSelected\n}) {\n  _s();\n\n  /**\n   * input with an onchange\n   * filter through raffles\n   * match substring/name of raffles case insensitive\n   */\n  const [filterRaffleName, setFilterRaffleName] = useState(\"\");\n  const [filteredRaffles, setFilteredRaffles] = useState([]);\n  useEffect(() => {\n    return () => {\n      effect;\n    };\n  }, [input]);\n\n  function filterRaffleByName(e) {\n    e.preventDefault();\n    setFilterRaffleName(e.target.value.toLowerCase());\n    console.log(\"filter input name\", filterRaffleName);\n    let filteredRaffleNameResult = raffles.filter(raffle => {\n      if (raffle.name.toLowerCase().includes(filterRaffleName)) {\n        return true;\n      }\n\n      return false;\n    });\n    setFilteredRaffles(filteredRaffleNameResult);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"raffles-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"All Raffles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: filterRaffleByName,\n      value: filterRaffleName,\n      placeholder: \"enter name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"raffles-array\",\n      children: [raffles.map((raffle, i) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/raffle/${raffle.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"raffle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: raffle.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created on:\", raffle.created_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Winner id:\", raffle.winner_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Raffled on:\", raffle.raffled_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this);\n      }), filteredRaffles ? filteredRaffles.map((raffle, i) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/raffle/${raffle.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"raffle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: raffle.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created on:\", raffle.created_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Winner id:\", raffle.winner_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Raffled on:\", raffle.raffled_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this);\n      }) : raffles.map((raffle, i) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/raffle/${raffle.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"raffle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: raffle.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Created on:\", raffle.created_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Winner id:\", raffle.winner_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Raffled on:\", raffle.raffled_at]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Raffles, \"q5OmSYQtHgKuNI9796kNTErhAv8=\");\n\n_c = Raffles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Raffles\");","map":{"version":3,"sources":["/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Raffles.jsx"],"names":["React","useState","useEffect","Link","Raffles","raffles","selected","setSelected","filterRaffleName","setFilterRaffleName","filteredRaffles","setFilteredRaffles","effect","input","filterRaffleByName","e","preventDefault","target","value","toLowerCase","console","log","filteredRaffleNameResult","filter","raffle","name","includes","map","i","id","created_at","winner_id","raffled_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Raffles({ raffles, selected, setSelected }) {\n  /**\n   * input with an onchange\n   * filter through raffles\n   * match substring/name of raffles case insensitive\n   */\n\n  const [filterRaffleName, setFilterRaffleName] = useState(\"\");\n  const [filteredRaffles, setFilteredRaffles] = useState([]);\n\n  \n  useEffect(() => {\n    return () => {\n      effect\n    };\n  }, [input]);\n  function filterRaffleByName(e) {\n    e.preventDefault()\n    setFilterRaffleName(e.target.value.toLowerCase());\n    console.log(\"filter input name\", filterRaffleName);\n    \n    let filteredRaffleNameResult = raffles.filter((raffle) => {\n      if (raffle.name.toLowerCase().includes(filterRaffleName)) {\n        \n        return true;\n      }\n      return false;\n    });\n    setFilteredRaffles(filteredRaffleNameResult);\n  }\n\n  return (\n    <div className=\"raffles-list\">\n      <h2>\n        <em>All Raffles:</em>\n      </h2>\n        <input\n          onChange={filterRaffleByName}\n          value={filterRaffleName}\n          placeholder=\"enter name\"\n        />\n      <div className=\"raffles-array\">\n        {raffles.map((raffle, i) => {\n              return (\n                <Link to={`/raffle/${raffle.id}`}>\n                  <div className=\"raffle\" key={i}>\n                    <h3>{raffle.name}</h3>\n                    <p>Created on:{raffle.created_at}</p>\n                    <p>Winner id:{raffle.winner_id}</p>\n                    <p>Raffled on:{raffle.raffled_at}</p>\n                  </div>\n                </Link>\n              )\n        })}\n        {filteredRaffles\n          ? filteredRaffles.map((raffle, i) => {\n              return (\n                <Link to={`/raffle/${raffle.id}`}>\n                  <div className=\"raffle\" key={i}>\n                    <h3>{raffle.name}</h3>\n                    <p>Created on:{raffle.created_at}</p>\n                    <p>Winner id:{raffle.winner_id}</p>\n                    <p>Raffled on:{raffle.raffled_at}</p>\n                  </div>\n                </Link>\n              );\n            })\n          : raffles.map((raffle, i) => {\n              return (\n                <Link to={`/raffle/${raffle.id}`}>\n                  <div className=\"raffle\" key={i}>\n                    <h3>{raffle.name}</h3>\n                    <p>Created on:{raffle.created_at}</p>\n                    <p>Winner id:{raffle.winner_id}</p>\n                    <p>Raffled on:{raffle.raffled_at}</p>\n                  </div>\n                </Link>\n              );\n            })}\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}
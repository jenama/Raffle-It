{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// export default function Raffles({ raffles, selected, setSelected }) {\n//   return (\n//     <div className=\"raffles-list\">\n//       <h2>\n//         <em>All Raffles:</em>\n//       </h2>\n//       <div className=\"raffles-array\">\n//           {raffles.map((raffle, i) => {\n//               return (\n//                 <Link to={`/raffle/${raffle.id}`}>\n//                   <div className=\"raffle\" key={i}>\n//                     <h3>{raffle.name}</h3>\n//                     <p>Created on:{raffle.created_at}</p>\n//                     <p>Winner id:{raffle.winner_id}</p>\n//                     <p>Raffled on:{raffle.raffled_at}</p>\n//                   </div>\n//                 </Link>\n//               );\n//             })}\n//       </div>\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// export default function Raffles({ raffles, selected, setSelected , setRaffles}) {\n//   /**\n//    * input with an onchange\n//    * filter through raffles\n//    * match substring/name of raffles case insensitive\n//    */\n//   const [filterRaffleName, setFilterRaffleName] = useState(\"\");\n//   const [filteredRaffles, setFilteredRaffles] = useState([]);\n//   const [filterMatch, setFilterMatch] = useState()\n//    useEffect(() => {\n//     async function getAllRaffles() {\n//       try {\n//         const url = `http://localhost:4100/raffles`;\n//         const { data } = await axios.get(url);\n//         setRaffles(data.payload);\n//         setFilteredRaffles(data.payload)\n//       } catch (error) {\n//         console.log(\"error\", error);\n//       }\n//     }\n//     getAllRaffles();\n//   }, []);\n//   function filterRaffleByName(e) {\n//     e.preventDefault()\n//     setFilterRaffleName(e.target.value.toLowerCase());\n//     console.log(\"filter input name\", filterRaffleName);\n//     let filteredRaffleNameResult = raffles.filter((raffle) => {\n//       if (raffle.name.toLowerCase().includes(filterRaffleName)) {\n//          return true\n//       } else {\n//           return false;\n//       }\n//     });\n//     setFilteredRaffles(filteredRaffleNameResult);\n//   }\n//   return (\n//     <div className=\"raffles-list\">\n//       <h2>\n//         <em>All Raffles:</em>\n//       </h2>\n//       <form>\n//         <input\n//           onChange={filterRaffleByName}\n//           value={filterRaffleName}\n//           placeholder=\"enter name\"\n//         />\n//       </form>\n//       <div className=\"raffles-array\">\n//       { !filteredRaffles ?  \n//           raffles.map((raffle, i) => {\n//               return (\n//                 <Link to={`/raffle/${raffle.id}`}>\n//                   <div className=\"raffle\" key={i}>\n//                     <h3>{raffle.name}</h3>\n//                     <p>Created on:{raffle.created_at}</p>\n//                     <p>Winner id:{raffle.winner_id}</p>\n//                     <p>Raffled on:{raffle.raffled_at}</p>\n//                   </div>\n//                 </Link>\n//               )\n//             }) : \n//               filteredRaffles.map((raffle, i) => {\n//               return (\n//                 <Link to={`/raffle/${raffle.id}`}>\n//                   <div className=\"raffle\" key={i}>\n//                     <h3>{raffle.name}</h3>\n//                     <p>Created on:{raffle.created_at}</p>\n//                     <p>Winner id:{raffle.winner_id}</p>\n//                     <p>Raffled on:{raffle.raffled_at}</p>\n//                   </div>\n//                 </Link>\n//               );\n//             }) \n//       }\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/johanneenama/Web-Backend-Takehome-Coding-Challenge/raffles-it/client/raffle-app/src/Components/Pages/Home/Raffles.jsx"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n\n// export default function Raffles({ raffles, selected, setSelected }) {\n\n\n//   return (\n//     <div className=\"raffles-list\">\n//       <h2>\n//         <em>All Raffles:</em>\n//       </h2>\n//       <div className=\"raffles-array\">\n        \n//           {raffles.map((raffle, i) => {\n//               return (\n//                 <Link to={`/raffle/${raffle.id}`}>\n//                   <div className=\"raffle\" key={i}>\n//                     <h3>{raffle.name}</h3>\n//                     <p>Created on:{raffle.created_at}</p>\n//                     <p>Winner id:{raffle.winner_id}</p>\n//                     <p>Raffled on:{raffle.raffled_at}</p>\n//                   </div>\n//                 </Link>\n//               );\n//             })}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// export default function Raffles({ raffles, selected, setSelected , setRaffles}) {\n//   /**\n//    * input with an onchange\n//    * filter through raffles\n//    * match substring/name of raffles case insensitive\n//    */\n\n//   const [filterRaffleName, setFilterRaffleName] = useState(\"\");\n//   const [filteredRaffles, setFilteredRaffles] = useState([]);\n//   const [filterMatch, setFilterMatch] = useState()\n\n//    useEffect(() => {\n//     async function getAllRaffles() {\n//       try {\n//         const url = `http://localhost:4100/raffles`;\n//         const { data } = await axios.get(url);\n//         setRaffles(data.payload);\n//         setFilteredRaffles(data.payload)\n//       } catch (error) {\n//         console.log(\"error\", error);\n//       }\n//     }\n//     getAllRaffles();\n//   }, []);\n\n//   function filterRaffleByName(e) {\n//     e.preventDefault()\n//     setFilterRaffleName(e.target.value.toLowerCase());\n//     console.log(\"filter input name\", filterRaffleName);\n    \n//     let filteredRaffleNameResult = raffles.filter((raffle) => {\n//       if (raffle.name.toLowerCase().includes(filterRaffleName)) {\n//          return true\n//       } else {\n//           return false;\n//       }\n//     });\n//     setFilteredRaffles(filteredRaffleNameResult);\n//   }\n\n//   return (\n//     <div className=\"raffles-list\">\n//       <h2>\n//         <em>All Raffles:</em>\n//       </h2>\n//       <form>\n//         <input\n//           onChange={filterRaffleByName}\n//           value={filterRaffleName}\n//           placeholder=\"enter name\"\n//         />\n//       </form>\n//       <div className=\"raffles-array\">\n//       { !filteredRaffles ?  \n//           raffles.map((raffle, i) => {\n//               return (\n//                 <Link to={`/raffle/${raffle.id}`}>\n//                   <div className=\"raffle\" key={i}>\n//                     <h3>{raffle.name}</h3>\n//                     <p>Created on:{raffle.created_at}</p>\n//                     <p>Winner id:{raffle.winner_id}</p>\n//                     <p>Raffled on:{raffle.raffled_at}</p>\n//                   </div>\n//                 </Link>\n//               )\n//             }) : \n//               filteredRaffles.map((raffle, i) => {\n//               return (\n//                 <Link to={`/raffle/${raffle.id}`}>\n//                   <div className=\"raffle\" key={i}>\n//                     <h3>{raffle.name}</h3>\n//                     <p>Created on:{raffle.created_at}</p>\n//                     <p>Winner id:{raffle.winner_id}</p>\n//                     <p>Raffled on:{raffle.raffled_at}</p>\n//                   </div>\n//                 </Link>\n//               );\n//             }) \n//       }\n\n        \n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n"]},"metadata":{},"sourceType":"module"}